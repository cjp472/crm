/** *  * @author:cf0666@gmail.com *  * @class ConHisView *  * @extends Ext.Panel *  * @description [ConHis]管理 *  * @company 优创融联科技 *  * @createtime: *  */ var hour = 0;minute = 0;second = 0; var t = 0 ; var flag1; function setTimeKQ (){		hour = parseInt(t/60/60);		minute = parseInt(t/60%60);		second = parseInt(t%60);		Ext.get('marquee').dom.innerHTML = "离开时间 ["+hour+"："+minute+"："+second+"]----跟进时间 ["+hour+"："+minute+"："+second+"]----登录时间 ["+hour+"："+minute+"："+second+"]----处理电话个数：10个";		Ext.get('leaveTime').dom.value = hour+" : "+minute+" : "+second;		Ext.get('loginTime').dom.value = hour+" : "+minute+" : "+second;		Ext.get('GJTime').dom.value = hour+" : "+minute+" : "+second;		Ext.get('callNum').dom.value = 12;		t = t + 1 ;		flag1 = setTimeout("setTimeKQ()",1000);	}var i = 0;var roleU = "";ConHisView = Ext.extend(Ext.Panel, {	// 构造函数			constructor : function(_cfg) {		jsLog(logStrMsg("注册ocx之前，先解除核查ocx","INFO"));		regOcxActiveScreenWrapTimeDet();		jsLog(logStrMsg("业务资料加载时开始注册‘核查补录’的ocx事件","INFO"));		regOcxActiveScreenWrapTime();		jsLog(logStrMsg("注册‘核查补录’的ocx事件完毕","INFO"));		if( i > 0){			var tabs = Ext.getCmp('ConHisGrid').getStore();	        tabs.reload();		}				Ext.applyIf(this, _cfg);		// 初始化组件		if(i == 0){			this.initUIComponents();		}		// 调用父类构造		ConHisView.superclass.constructor.call(this, {										id : 'ConHisViewWin',					title : '联络记录',					region : 'center',					layout : 'border',					items : [this.searchPanel, this.gridPanel],										listeners : {   //清空变量判断						'beforeclose' :  function(p){							i = 0;						}					}				});	},// end of constructor	// 初始化组件	initUIComponents : function() {		var fieldnameComboData = [				['customerid', '客户ID', new Ext.form.ComboBox({									editabel : false,									lazyInit : false,									triggerAction : 'all',									store : new Ext.data.SimpleStore({												autoLoad : true,												url : __ctxPath												+ '/customer/listCustomer.do',												fields : ['customerid',														'customeridName']											}),									displayField : 'customeridName',									valueField : 'customerid',									id : 'customerid'								})],				['contactorId', '联系人ID', new Ext.form.ComboBox({					editabel : false,					lazyInit : false,					triggerAction : 'all',					store : new Ext.data.SimpleStore({								autoLoad : true,								url : __ctxPath + '/customer/listCusLinkman.do',								fields : ['contactorId', 'contactorIdName']							}),					displayField : 'contactorIdName',					valueField : 'contactorId',					id : 'contactorId'				})], ['srcTypeId', '来源类别&CONLYLB', new MT.DicComboBox({									hiddenName : 'srcTypeId',									itemKey : 'CONZT',																		hidden : true								})],				['dirId', '方向&CONFX', new MT.DicComboBox({									hiddenName : 'dirId',									itemKey : 'CONZT'								})],				['contactTypeId', '联系方式&LXFS001', new MT.DicComboBox({									hiddenName : 'contactTypeId',									itemKey : 'CONZT'								})],												//业务类型索引查询  测试暂时//				['busTypId', '业务类型&LXFS002', new MT.DicComboBox({////									hiddenName : 'busTypId',////									itemKey : 'CONZT'////								})],				['preContactNum', '区号/地区号', new Ext.form.TextField({									name : 'preContactNum',									allowBlank : true								})],				['mainContactNum', '号码/详细地址', new Ext.form.TextField({									name : 'mainContactNum',									allowBlank : true								})],				['lastContactNum', '分机号/邮编', new Ext.form.TextField({									name : 'lastContactNum',									allowBlank : true								})],				['staTime', '开始时间', new Ext.form.DateField({									hiddenName : 'staTime',									format : 'Y-m-d'								})],				['endTime', '结束时间', new Ext.form.DateField({									hiddenName : 'endTime',									format : 'Y-m-d'								})],				['busTypId', '联络事项&CONLLSX', new MT.DicComboBox({									hiddenName : 'busTypId',									itemKey : 'CONZT'								})],				['conResId', '联络结果&CONLLJG', new MT.DicComboBox({									hiddenName : 'conResId',									itemKey : 'CONZT'								})],				['conResRemarks', '联络结果备注', new Ext.form.TextField({									name : 'conResRemarks',									allowBlank : true								})],				['content', '联络内容', new Ext.form.TextField({									name : 'content',									allowBlank : true								})],				['dealStaId', '处理状态&CONCLZT', new MT.DicComboBox({									hiddenName : 'dealStaId',									itemKey : 'CONZT'								})], ['remarks', '备注', new Ext.form.TextField({									name : 'remarks',									allowBlank : true								})], ['ownerId', '负责人', new MT.DicComboBox({									hiddenName : 'ownerId',									itemKey : 'CONZT'								})],				['statusId', '状态&CONZT', new MT.DicComboBox({									hiddenName : 'statusId',									itemKey : 'CONZT'								})]]		var ConHisAdvancedSearchWin = Ext.extend(MT.AdvancedSearchWin, {					title : '[ConHis]高级查询',					fieldData : fieldnameComboData				});		// 初始化搜索条件Panel		this.searchPanel = new Ext.FormPanel({					layout : 'hbox',					region : 'north',					id : 'ConHisSearchPanel',					frame : true,					height : 35,										items : [							 {							 text : '处理状态'							 }, {							 hiddenName : 'Q_dealStaId_SN_EQ',							 xtype : 'mtdiccombolocal',							 editable : true,							 lazyInit : false,							 forceSelection : false,							 width: 100,							 id:'dealStaId',							 itemKey : 'CONSUCNO'							 },					{						text : '业务类型'					}, {						hiddenName : 'Q_busTypId_SN_EQ',						//xtype : 'mtdiccombo',						xtype : 'mtdiccombolocal',						editable : true,												lazyInit : false,						 id:'busTypId',						forceSelection : false,												width: 100,						itemKey : 'LXFS001'					}, {						text : '坐席员号'					}, {						id:'agentName',						name : 'agentName',						xtype : 'textfield',						width: 70					}, {						text : '设备编号'					}, {						id:'mainContactNum',						name : 'Q_mainContactNum_S_LK',						xtype : 'textfield',						width: 70					} , {						 text : '补录信息'							 					} , {						 width: 100,						 hiddenName : 'Q_remarks_S_LK',						 id:'bulu_S',						 xtype : 'mtdiccombolocal',						 editable : true,						 lazyInit : false,						 forceSelection : false,						 itemKey : 'BULU001'						 					 },//					 {//					 	 text:'证件号'//					 },{//					 	 name : 'Q_credNum_S_LK',//						 xtype : 'textfield',//						 width: 70//					},					{						 text:'流水号'					},{						 name : 'Q_serialNum_S_LK',						 id:'serialNum',						 xtype : 'textfield',						 width: 70					}, {text:'开始时间'},{							 name : 'Q_staTime_DL_GE',														 xtype : 'datefield',							 width : '80',							 							 format:'Y-m-d',							 							 id :'startimes'							 }											, {text:'结束时间'},{													 name : 'Q_endTime_DG_LE',						 xtype : 'datefield',						 format : 'Y-m-d',						 						 id :'endtimes'						 }							],					layoutConfig : {						padding : '5',						align : 'middle'					},					defaults : {						xtype : 'label',						border : false,						margins : {							top : 0,							right : 4,							bottom : 4,							left : 4						}					},					border : false,					frame : false				});// end of searchPanel		this.topbar = new Ext.Toolbar({					items : ['->',{						xtype : 'button',						text : __search,						iconCls : 'search',						scope : this,						 						handler:function(){				           var dealStaId=  Ext.getCmp('dealStaId').getRawValue();//搜索				           //var str='成功';				           var fllgdealStaId;				           if("成功"==dealStaId){				        	   fllgdealStaId="1001";				           }else if("失败"==dealStaId){				        	   fllgdealStaId="11";				           }else{				        	   fllgdealStaId=null;				           }				          							var busTypId = Ext.getCmp('busTypId').getRawValue();							//alert(busTypId);							var flagbusTypId=null;							if("开卡"==busTypId){								flagbusTypId="0";							}else if("动态网银(申)"==busTypId){								flagbusTypId="1";							}else if("动态网银(修)"==busTypId){								flagbusTypId="2";							}else if("动态网银(解)"==busTypId){								flagbusTypId="3";							}else if("手机银行(申)"==busTypId){								flagbusTypId="4";							}else if("手机银行(下)"==busTypId){								flagbusTypId="5";							}else if("手机银行(重)"==busTypId){								flagbusTypId="6";							}else if("手机银行(转/支)"==busTypId){								flagbusTypId="7";							}else if("手机银行(注)"==busTypId){								flagbusTypId="8";							}else if("电子密码(申)"==busTypId){								flagbusTypId="13";							}else if("电子密码(修)"==busTypId){								flagbusTypId="14";							}else if("电子密码(重)"==busTypId){								flagbusTypId="15";							}else if("电话密码(申)"==busTypId){								flagbusTypId="16";							}else if("电话密码(修)"==busTypId){								flagbusTypId="17";							}else if("电话密码(重)"==busTypId){								flagbusTypId="18";							}else if("网银证书(申)"==busTypId){								flagbusTypId="111";							}else if("网银证书(添)"==busTypId){								flagbusTypId="222";							}else if("网银证书(挂)"==busTypId){								flagbusTypId="333";							}else if("网银证书(修)"==busTypId){								flagbusTypId="444";							}else if("网银证书(恢复启用)"==busTypId){								flagbusTypId="555";							}else if("网银证书(恢复验证)"==busTypId){								flagbusTypId="666";							}else if("电子渠道"==busTypId){								flagbusTypId="10";							}else if("理财签约"==busTypId){								flagbusTypId="11";							}else if("基金签约"==busTypId){								flagbusTypId="12";							}else {								flagbusTypId=null;							}												var bulu_S = Ext.getCmp('bulu_S').getRawValue();							var flag;							if("未补录,或失败"==bulu_S){								flag="NEEDCHECK";					          }else if("已补录,并成功"==bulu_S){					        	  flag="CHECKOK"; 					          }else{  					        	  flag=null; 					          }							var serialNum = Ext.getCmp('serialNum').getValue();							var startimes = Ext.get('startimes').getValue();							var endtimes = Ext.get('endtimes').getValue();							var mainContactNum = Ext.getCmp('mainContactNum').getValue();							var agentName = Ext.getCmp('agentName').getValue();				//alert(fllgdealStaId+flagbusTypId);				//alert(flagbusTypId+"1-"+bulu_S+"-"+serialNum+"-"+startimes+"-"+endtimes+mainContactNum+agentName);				//通过监听重新刷新数据，在分页实现的查询的时候，为了防止第二遍查询的时候条件丢失，借用监听				this.gridPanel.getStore().addListener({					beforeload:function(store,records,options){						store.baseParams = {								fllgdealStaId:fllgdealStaId,								busTypId:flagbusTypId,								bulu_S:flag,								serialNum:serialNum,								startimes:startimes,								endtimes:endtimes,								mainContactNum:mainContactNum,								agentName:agentName						};					}				});						this.gridPanel.getStore().reload({					    	params: {					    		start:0,					    		limit:25				    	    }			   			 });		 					 }														}, {								xtype : 'button',								text : __reset,								scope : this,								iconCls : 'btn-reset',								handler : this.reset							}							]				});				this.gridPanel = new HT.GridPanel({			region : 'center',			rowActions : true,			printable : false,			tbar : this.topbar,						exportable : true,			id : 'ConHisGrid',			url : __ctxPath + "/customer/SelectRoleConConHis.do",			fields : [{						name : 'conHisId',						type : 'int'						//*********					}, 'customer', 'cusLinkman', 'srcTypeId', 'dirId',					'contactTypeId', 'preContactNum', 'mainContactNum',					'lastContactNum', 'staTime', 'endTime', 'busTypId',					'conResId', 'conResRemarks', 'content', 'dealStaId',					'remarks', 'ownerId', 'statusId', 'contactNum', 'owner','serialNum', 'cusName' ,'credNum','conAttachs','agentName','conHisId'],			columns : [{  //8008						header : 'conHisId',							dataIndex : 'conHisId',						hidden : true					}, {						header : '联系方式',						isExp : false,												hidden : true,												dataIndex : 'contactTypeId',						renderer : function(value) {							return LXFS001.get(value);						}					}, {						header : '方向',						isExp : false,						dataIndex : 'dirId',						renderer : function(value) {							return CONFX.get(value);						}					}, {						header : '来源类别',						isExp : false,						dataIndex : 'srcTypeId',												hidden : true,						renderer : function(value) {														return CONLYLB.get(value);						}					},{						header : '网点名称',												isExp : false,						dataIndex : 'mainContactNum',												renderer : function(value) {						//return WDNAME001.get(value);							var result;							Ext.Ajax.request({								url : __ctxPath + '/customer/selectEquipNameConHis.do',								method : 'post',								async: false,								params : {									Eid : value								},								method : 'post',								success : function(response) {			                        result = Ext.util.JSON.decode(response.responseText);			                    }							})							return result.data.equipmentName;																			}					}, {						header : '业务类型', //'联络事项',						isExp : false,						dataIndex : 'busTypId',//						renderer : function(value) {							if(value == null){								return '开卡';							}else{								return LXFS001.get(value);							}						}					}, {						header : '开始时间',						isExp : false,												sortable : true ,						dataIndex : 'staTime'					}, {						header : '结束时间',						isExp : false,						dataIndex : 'endTime'					}, {						header : '坐席员',						isExp : false,						dataIndex : 'owner',						renderer : function(val) {							return val ? val.username : '';						}					}, {						header : '联络结果',						isExp : false,						hidden : true,												dataIndex : 'conResId',						renderer : function(value) {							return CONLLJG.get(value);						}				}	, {						header : '客户姓名',						isExp : false,						dataIndex : 'cusName'				}, {					header : '流水号',					isExp : false,					dataIndex : 'serialNum'				}, {					header : '处理状态',					isExp : false,					dataIndex : 'dealStaId',					renderer : function(value) {						return CONSUCNO.get(value);					}				}	, new Ext.ux.grid.RowActions({								header : '查看',								width : 100,								actions : [{											iconCls : 'btn-readdocument',											qtip : '查看',											style : 'margin:0 3px 0 3px'										},{											iconCls : 'add',  //btn-query											qtip : '核查补录',																						id : 'bulu',											style : 'margin:0 3px 0 3px',																						fn : function(record) {													if (record.data.remarks == null || record.data.remarks == 'CHECKOK') {														return false;													} else {														return true;													}											}										}],								listeners : {									scope : this,									'action' : this.onRowAction								}							})]				// end of columns			});		//this.gridPanel.addListener('rowdblclick', this.rowClick);	},// end of the initComponents()		// 重置查询表单	reset : function() {		this.searchPanel.getForm().reset();			},	// 按条件搜索	onSearch : function(obj) {		//Ext.get('leaveTime').dom.value ="ddddd";		$search({				searchPanel : this.searchPanel,				gridPanel : this.gridPanel			});		//setTimeKQ();	},			// GridPanel行点击处理事件-- 	rowClick : function(grid, rowindex, e) {		var record = grid.getSelectionModel().each(function(record) {//					new ConHisForm({////								conHisId : rec.data.conHisId////							}).show();						var tabs = Ext.getCmp('centerTabPanel');		var aForm = Ext.getCmp('ConHisFormWin');          // alert(aForm);		if (aForm != null||aForm != undefined) {			tabs.remove(aForm);		}				var share = "D:\\filemapp\\";		try		{		 var fso=new ActiveXObject("scripting.filesystemobject");		 var txtstream=fso.openTextFile('c:\\agent.config');		 while(!txtstream.atEndOfLine)		 {			 var line = txtstream.ReadLine();				if(line.indexOf('share=')==0) {//var agentno, agcallno, agsite;					share = line.substring('share='.length,line.length);				}						 }		 txtstream.close();		 txtstream=null;		 fso=null;		}		catch(e){			alert("读取配置文件c:\\agent.config失败!");			}				aForm = new ConHisForm({					conHisId : record.data.conHisId,					bobShare : share				});		tabs.add(aForm);		tabs.activate(aForm);				});	},	// 创建记录	createRs : function() {		// new ConHisForm().show();		var tabs = Ext.getCmp('centerTabPanel');		var aForm = Ext.getCmp('ConHisForm');		if (aForm != null) {			tabs.remove('ConHisForm');		}		aForm = new ConHisForm();		tabs.add(aForm);		tabs.activate(aForm);	},	// 按ID删除记录	removeRs : function(id) {		$postSubmit({					url : __ctxPath + '/customer/multiDelConHis.do',					ids : id,					grid : this.gridPanel,					msgTip : '您确认要删除所选记录吗？',					msgSuccess : '成功删除该记录！',					msgFailure : '操作出错，请联系管理员！'				});	},	// 把选中ID删除	removeSelRs : function() {		$gridRs({					url : __ctxPath + '/customer/multiDelConHis.do',					grid : this.gridPanel,					idName : 'conHisId',					msgNull : '请选择要删除的记录！',					msgTip : '您确认要删除所选记录吗？',					msgSuccess : '成功删除该记录！',					msgFailure : '操作出错，请联系管理员！'				});	},	// 编辑Rs	editRs : function(record) {		// new ConHisForm({		// conHisId : record.data.conHisId		// }).show();		var tabs = Ext.getCmp('centerTabPanel');		var aForm = Ext.getCmp('ConHisFormWin');          // alert(aForm);		if (aForm != null||aForm != undefined) {			tabs.remove(aForm);		}		aForm = new ConHisForm({					conHisId : record.data.conHisId,					flag:flag				});		tabs.add(aForm);		tabs.activate(aForm);	},	// 行的Action	onRowAction : function(grid, record, action, row, col) {				switch (action) {			case 'btn-del' :				this.removeRs.call(this, record.data.conHisId);				//alert("--"+record.data.conHisId);				break;			case 'btn-readdocument' :				this.editRs.call(this, record);				//alert("++"+record);				break;			case 'add' :			  var agentRole="";				var str="总行座席班长";				Ext.Ajax.request({					url : __ctxPath + '/customer/SelectRoleConHis.do',					method : 'post',					//waitMsg : '正在提交数据...',					async: false,					success : function(result, request) {						agentRole = result.responseText.split(':')[1].split('}')[0];			       			        }				});				agentParamExamine();				//赋值成员变量..				dealN = record.data.serialNum;				cusN = record.data.cusName;				transP = record.data.agentName;				jsLog(logStrMsg("dealN:" + dealN + ",cusN=" + cusN + ",transP=" + transP,"INFO"));				//********************************				//  2016-1-5 解决生产中核查补录，每次都需要查看业务资料才能在补录时看拍照照片				//********************************				Ext.Ajax.request({					url : __ctxPath + '/customer/getConHis.do?conHisId='								+ record.data.conHisId + '&bobShare=',					method : 'post',					async: false,					success : function(response, options) {						var thisObj = Ext.util.JSON.decode(response.responseText).data;						var conAttachs = thisObj.conAttachs; // 获得传递的相关知识						conAttachX = conAttachs;			        }				});				//**********************************				jsLog(logStrMsg("agentRole=" + agentRole + "    conAttachX=" + conAttachX,"INFO"));				if(curUserInfo_1.username == record.data.agentName ||  agentRole==str){				//if(curUserInfo_1.username == record.data.agentName || curUserInfo_1.buLu == 1){					checkPersonalInfo(record.data,conAttachX);				}else{					//checkPersonalInfo(record.data);					alert("很抱歉，由于您不是该笔业务的经办人,无权补录身份核查!");				}				break;			default :				break;		}	},	//加入黑名单	inJoinRs : function(){		var ids = $getGdSelectedIds(this.gridPanel, 'conHisId');		if (ids.length != 1) {			Ext.ux.Toast.msg("操作信息", "此操作只能选择一条记录！");			return;		}		 new ConWeichuliFormJiaRuHMD({					 conHisId : ids				 }).show();	},	comeen : function (){		alert("000000");	}	});//  补录需要的变量  ERROR。。var dealN,cusN,transP;var countExamine = 0,countBL = 0;//----------------------------身份核查补录功能点------------------------var result;var savepicDirs ; //txt文件路径var S_share ;var BL_SF_dname,BL_SF_pname,BL_SF_id,BL_SF_result,BL_SF_wangid,BL_SF_cp,BL_SF_yearmd,BL_SF_time,BL_SF_agentname;function agentParamExamine() {	try {		var fso = new ActiveXObject("scripting.filesystemobject");		var txtstream = fso.openTextFile('c:\\agent.config');		while (!txtstream.atEndOfLine) {			var line = txtstream.ReadLine();			if (line.indexOf('agentno=') == 0) {// var agentno, agcallno,				BL_SF_cp = line.substring('agentno='.length, line.length);			} else if (line.indexOf('agentcallno=') == 0) {			} else if (line.indexOf('agentsite=') == 0) {				BL_SF_wangid = line.substring('agentsite='.length, line.length);			} else if (line.indexOf('savepicDir=') == 0) {				savepicDirs = line.substring('savepicDir='.length, line.length);			} else if (line.indexOf('share1=') == 0) {				S_share = line.substring('share1='.length,line.length);			} else if (line.indexOf('videoIndex1=') == 0) {			}		}		txtstream.close();		txtstream = null;		fso = null;	} catch (e) {		jsLog(logStrMsg("read 读取配置文件c:\\agent.config失败 " + e,"ERROR"));		//alert("读取配置文件c:\\agent.config失败!");	}}function getDealno(filePath) {	var node, min, max, cur;	try {		var fso = new ActiveXObject("Scripting.FileSystemObject");		var f = fso.OpenTextFile(filePath, 1, true);// 只读		var line;		while (!f.AtEndOfStream) {			line = f.ReadLine();			if (line.indexOf('node=') == 0) {				node = line.substring('node='.length, line.length);			}			if (line.indexOf('min=') == 0) {				min = line.substring('min='.length, line.length);			}			if (line.indexOf('max=') == 0) {				max = line.substring('max='.length, line.length);			}			if (line.indexOf('cur=') == 0) {				cur = line.substring('cur='.length, line.length);			}		}		if (parseInt(cur) < parseInt(max)) {			cur++;		} else {			cur = min;		}		//读取配置文件		if (!node || !min || !max || !cur) {			jsLog(logStrMsg("流水号配置文件c:\\bobdealno.txt缺少数据！ 函数返回 -1 ","ERROR"));			//alert("流水号配置文件c:\\bobdealno.txt缺少数据！");			return -1;		}		f.Close();		var fh = fso.OpenTextFile(filePath, 2, true);	// 只读=1 ，只写=2 ，追加=8 等权限		fh.WriteLine("node=" + node);		fh.WriteLine("min=" + min);		fh.WriteLine("max=" + max);		fh.WriteLine("cur=" + cur);		fh.Close();	} catch (ex) {		jsLog(logStrMsg("读取配置文件" + filePath + "失败!" + ex,"ERROR"));		//alert("读取配置文件" + filePath + "失败!" + ex);		return -1;	}	return cur;}function getNull(src, len, str) {	var tmp = "";	// alert(src + ":length:" + str);	for (var a = 0; a < len - src.length; a++) {		tmp += str;	}	return tmp + src;}function RegAgentBankIDCardResult(strMessage) {	jsLog(logStrMsg("[[核查补录]] ->:("+strMessage+")","MESSAGE"));	countBL ++;	if(strMessage == "ERROR"){		//alert("联网核查超时，补录失败");   //curUserInfo_1.username		jsLog(logStrMsg("联网核查返回ERROR，补录失败","MESSAGE"));		saveExamineInfo(dealN,cusN,transP,curUserInfo_1.username,new Date().pattern('yyyy-MM-dd HH:mm'),"失败");		jsLog(logStrMsg("补录操作_ saveExamineInfo   >>> 失败","MESSAGE"));	}else{		parseXmlFuncConHis(strMessage);	}}function checkPersonal(credNum,cusname){	//Ext.getCmp("BL_check_name").setValue("-0-00-0-0");	jsLog(logStrMsg("checkPersonal Function: _Start    "+cusname+"<->"+credNum,"MESSAGE"));	myocx.BankIDCardVeryficationWrapTime("00301", getNull(getDealno("c:\\checkidcard.txt") + "", 6, "0"), "3v4","0000", cusname, credNum);	jsLog(logStrMsg("checkPersonal Function: _Over:->param1=00301,param2="+getNull(getDealno("c:\\checkidcard.txt") + "", 6, "0")+",param3=3v4,param=4=0000,param5="+cusname+",param6="+credNum,"MESSAGE"));}function parseXmlFuncConHis(xml) {		//BL_SF_dname = "补录业务";		//BL_SF_agentname = record.data.agentName;	BL_SF_yearmd = new Date().format('yyyy-MM-dd');	BL_SF_time = new Date().format('HH:mm:ss');	//	var xml =   "<RETCODE>90000</RETCODE>"+//				"<RETMSG></RETMSG>"+//				"<OUT>"+//				"<RESULT>00</RESULT>"+//				"<JYLSH>20140522000008866308</JYLSH>"+//				"<ISSUEOFFICE>此项暂不返回核查结果</ISSUEOFFICE>"+//				"<NAME>金卫忠</NAME>"+//				"<ID>330621196906253193</ID>"+//				"<PHOTO>D:\BOBRVA\idpic\ 90718.jpg</PHOTO>"+//				"</OUT>";	var test;	test = xml;	jsLog(logStrMsg("  parseXmlFuncConHis(xml): " + test,"INFO"));	test = test.split("<RESULT>")[1].split("</RESULT>");		Ext.getCmp("BL_check_deal").setValue(test[0]);	test = test[1].split("<ISSUEOFFICE>")[1].split("</ISSUEOFFICE>");	Ext.getCmp("BL_check_jiguan").setValue(test[0]);	test = test[1].split("<NAME>")[1].split("</NAME>");	BL_SF_pname = test[0];	Ext.getCmp("BL_check_name").setValue(test[0]);	//BL_SF_pname = test[0]; 	test = test[1].split("<ID>")[1].split("</ID>");	BL_SF_id = test[0];	Ext.getCmp("BL_check_cerno").setValue(test[0]);	//cus_cerno = test[0];	test = test[1].split("<PHOTO>")[1].split("</PHOTO>");	//TT002201403111749.bmp	//	var idpic = '<div style="width:100px;text-align:center"><img src="'//			+ test[0] + '" style="width:80px;margin-left:20px"/></div>';	var idpic = '<div style="width:100px;text-align:center"><img src="'+test[0]+'" style="width:80px;margin-left:20px"/></div>';	Ext.getCmp('BL_checkid_pic').setValue(idpic);}/** *  查看拍照照片 * @param {Object} pInfo   * @memberOf {TypeName}  * 2014/05/23 * Mr.Hu */function showPic(picpath) {	var picwin = new Ext.Window({				id : "win",				title : "拍照照片",				width : 600,				height : 500,				maximizable : true,				html : '<div style="text-align:center;"><img style="width:500" src="'						+ picpath + '"/></div>',				buttons : [{							text : '关闭',							handler : function() {								picwin.close();							}						}]			});	picwin.show();}/** * HY 2014/5/22 * 弹窗显示员工资料详情 */checkPersonalInfo = function(pInfo , conAttachs) {	jsLog(logStrMsg(">>>>弹窗显示员工资料详情:" + pInfo,"INFO"));	//alert("checkPersonalInfo"+pInfo);	var picpaths ="";  //证件照片路径	var img = "";	var PZimg = "";	jsLog(logStrMsg("---------pInfo.conAttachs.length=" + conAttachs.length,"INFO"));	for(var i = 0; i<conAttachs.length;i++){		var path = "";		///D:/BOBRVA/tempfile/TT002201405221010.bmp		jsLog(logStrMsg("---------pInfo.conAttachs[i].fileType=" + conAttachs[i].fileType,"INFO"));		if(conAttachs[i].fileType == 2 ){			path = conAttachs[i].filePath;			var year = (pInfo.serialNum).substring(4,8);			var month = (pInfo.serialNum).substring(8,10);			var day = (pInfo.serialNum).substring(10,12);			jsLog(logStrMsg("---------year=" + year + ",month=" + month + ",day=" + day,"INFO"));			if(path.indexOf(".bmp") >= 0 && (path.indexOf("/TT0") >= 0 || path.indexOf("/TC0") >= 0)){ //证件照片				//pInfo.serialNum:T002201407250945  ->  2014/07/25/T002201407250945/				var boxName = "T"+(pInfo.serialNum)+".bmp";				//alert(year+"/"+month+"/"+day+"/"+pInfo.serialNum+"/"+boxName);				picpaths = S_share+"/"+year+"/"+month+"/"+day+"/"+pInfo.serialNum+"/"+boxName;				jsLog(logStrMsg("身份核查补录时，证件照片路径：" + picpaths,"INFO"));				//picpaths ='C:\\TT002201405081108.bmp';				img = '<img src="'+ picpaths + '"style="width:80px;margin-left:10px"/>';			}else if(path.indexOf(".bmp") >= 0 && (path.indexOf("/CT0") >= 0 || path.indexOf("/CC0") >= 0)){  //拍照照片				jsLog(logStrMsg("路径：" + path,"INFO"));				//var boxName1 = path.split('/')[4];				PZimg = S_share + path;				jsLog(logStrMsg("身份核查补录时，拍照照片路径：" + PZimg,"INFO"));				//PZimg = 'C:\\CT002201403111749.bmp';			}		}	}	formPanel = new Ext.FormPanel({				layout : 'form',				border : false,				labelAlign : 'right',				frame : true,				buttonAlign : 'center',				items:[{					layout : 'column',					autoWidth : true,					border : false,					items:[						  {								columnWidth : .5,							border : false,							layout : 'form',							items : [{									xtype : 'displayfield',									fieldLabel : '姓名',									anchor : '100%',									value : pInfo.cusName								},{									xtype : 'displayfield',									fieldLabel : '身份证号',									value : pInfo.credNum   //conAttachs								},{//*******									xtype : 'button',									text : '联网核查',									style : 'margin-left:60px;margin-top:10px',									iconCls : 'search',									scope : this,									handler : function(){										countExamine ++;									    //alert(pInfo.agentName);										jsLog(logStrMsg("点击身份核查->参数1：流水号="+pInfo.credNum+",参数2：客户姓名="+pInfo.cusName,"INFO"));										checkPersonal(pInfo.credNum,pInfo.cusName);									}								},{//*******									xtype : 'button',									text : '拍照照片',									style : 'margin-left:60px;margin-top:10px',									//iconCls : 'search',									scope : this,									handler : function(){										showPic(PZimg);									}								}]						},{							columnWidth : .5,							border : false,							layout : 'form',							items : [{								xtype : 'displayfield',								anchor : '100%',								id : 'BL_pic',								value : img							}]						}					]				},				{					xtype : 'fieldset',					style : 'padding:10px',					layout : 'form',					title : '返回信息',					items : [{						layout : 'column',						border : false,						items : [{							layout : 'form',							border : false,							labelWidth : 200,							labelAlign : 'right',							columnWidth : .5,							items : [{										fieldLabel : '姓名',										xtype : 'textfield',										id : 'BL_check_name',										name : 'BL_check_name',										anchor : '100%',										readOnly : true,										value : ''									}, {										fieldLabel : '身份证号',										xtype : 'textfield',										anchor : '100%',										id : 'BL_check_cerno',										name : 'B_check_cerno',										readOnly : true,										value : ''									}]						}, {							layout : 'form',							border : false,							columnWidth : .5,							labelAlign : 'right',							height : 100,							labelWidth : 1,							items : [{								xtype : 'displayfield',								anchor : '100%',								id : 'BL_checkid_pic',								html : '',								value : '<div style="width:120px;height:100px;background:blue;" ></div>'							}]						}]					}, {						layout : 'column',						border : false,						items : [{							layout : 'form',							border : false,							labelAlign : 'right',							labelWidth : 200,							columnWidth : .8,							items : [{										fieldLabel : '签发机关',										xtype : 'textfield',										anchor : '100%',										readOnly : true,										id : 'BL_check_jiguan',										name : 'BL_check_jiguan',										value : ''									}]						}]					}, {						layout : 'column',						border : false,						items : [{							layout : 'form',							border : false,							labelWidth : 200,							labelAlign : 'right',							columnWidth : .6,							items : [{								fieldLabel : '号码与姓名一致,与反馈照片核对',								anchor : '100%',								xtype : 'combo',								mode : 'local',								lazyInit : false,								id : 'BL_check_picaaa',								name : 'BL_check_picaaa',								valueField : 'code',								hiddenName : 'BL_check_picaaa_code',								displayField : 'desc',								triggerAction : 'all',								store : new Ext.data.SimpleStore({											fields : ['code','desc'],											data : [['00', '公民身份号码与姓名一致，且存在照片'],													['01', '公民身份号码与姓名一致，但不存在照片'],													['02', '公民身份号码存在，但与姓名不匹配'],													['03', '公民身份号码不存在'],													['04', '其他错误'],													['05', '输入的参数错误']],											autoLoad : true										}),								editable : false,								value : '',								listeners : {									select : function(combobox,record, index) {										//checkret(Ext.get("check_picaaa_code").getValue());									}								}							}]						}]					}, {						layout : 'column',						border : false,						items : [{							layout : 'form',							border : false,							labelWidth : 200,							labelAlign : 'right',							columnWidth : .6,							items : [{								fieldLabel : '交易结果',								xtype : 'textfield',								anchor : '100%',								id : 'BL_check_deal',								name : 'BL_check_deal',								readOnly : true,								value : ''							}]						}]					}]				}],				buttons : [ {				id : 'sureorno',				text : '确认并保存',				handler : function() {  //8008 					//alert(pInfo.serialNum);					if(countBL == 0){						alert("核查暂未返回信息，请等待!");					}else{						if((pInfo.busTypId >= 1 && pInfo.busTypId<=18) && pInfo.busTypId!=11){							BL_SF_dname = "电子渠道";						}else if(pInfo.busTypId == null){							BL_SF_dname = "开卡";						}else{							BL_SF_dname = LXFS001.get(pInfo.busTypId);						}						if(Ext.getCmp("BL_check_picaaa").getValue() == ""){							alert("核查结果未选择，请核对！");						}else{   //serialNum							var str = "dName="+BL_SF_dname+									  "\npName="+BL_SF_pname+									  "\nID="+BL_SF_id+									  "\nresult="+ Ext.get("BL_check_picaaa").getValue()+									  "\nwangID="+BL_SF_wangid+									  "\ncp="+BL_SF_cp+									  "\nyearMD="+BL_SF_yearmd+									  "\ntime="+BL_SF_time+									  "\nagentName="+curUserInfo_1.username;														//alert("流水号："+pInfo.serialNum+"\n文件内容：context"+"\n文件名：X"+pInfo.serialNum+".txt");							//alert(Ext.get("BL_check_picaaa").getValue());								 						myocx.agentSetPersonalCheckInfo(pInfo.serialNum,str,"X" + pInfo.serialNum + ".txt","");	 						savepicDirs = savepicDirs + "X" + pInfo.serialNum + ".txt";							updateCheckPersonals(pInfo.conHisId,'CHECKOK');							saveSomeFiless(pInfo.conHisId, '99', '2', savepicDirs,curUserInfo_1.username, pInfo.cusName, pInfo.credNum , pInfo.mainContactNum,pInfo.serialNum); 							alert("保存核查文件成功!");							//存储 核查操作记录...							saveExamineInfo(pInfo.serialNum,pInfo.cusName,pInfo.agentName,curUserInfo_1.username,new Date().pattern('yyyy-MM-dd HH:mm'),"成功");							jsLog(logStrMsg("调用存储核查操作记录后台完毕>>>","INFO"));							//...							showCheckPersonalInfo.close();							countExamine = 0; countBL =0;							ConHisView();													}					}									}			}]			});	var showCheckPersonalInfo = new Ext.Window({		title : '身份核查补录',		//iconCls : 'btn-password',		width : 800,		height : 500,		modal : true,		layout : 'anchor',		bodyStyle : 'padding:5px;',		buttonAlign : 'center',		maximizable : true,		autoScroll : true,		items : [formPanel],		closable : true,		buttons : [ {			text : '关闭',			iconCls : 'btn-cancel',			handler : function() {				if(countExamine == 1){					//点击了联网核查后在判断是否核查返回结果；					if(countBL == 0){						alert("核查暂未返回信息，请等待!");					}else{						if(Ext.get('BL_check_jiguan').getValue() == ""){							showCheckPersonalInfo.close();							countExamine = 0; countBL =0;						}else{							if(Ext.get('BL_check_picaaa').getValue() == ""){								alert("请选择相关的反馈信息，并确认保存文件!");							}						}					}				}else{					showCheckPersonalInfo.close();					countExamine = 0; countBL =0;				}			}		}]	});	showCheckPersonalInfo.show();};/** * 2014/07/30 SeaBreeze * 补录身份核查后，存储后台相关操作，提供报表数据 * @Param dealnum(流水号),cusname(客户姓名),transactP(办理人),examineP(补录人),examineD(补录时间),examineR(补录结果) */function saveExamineInfo(dealnum,cusname,transactP,examineP,examineD,examineR){	try {		Ext.Ajax.request({					url : __ctxPath + '/customer/InsertExamineInfoConHis.do',					method : 'post',					params : {						dealnum : dealnum,						cusname : cusname,						transactpersonal : transactP,						examinepersonal : examineP,						examinedate : examineD,						examineresult : examineR					},					success : function(response, options){						jsLog(logStrMsg("saveExamineInfo -> SUCCESS!","MESSAGE"));						if(examineR == "失败"){							alert("联网核查超时，补录失败!");						}					},					failure : function(response, options){						jsLog(logStrMsg("saveExamineInfo -> FAILURE!","ERROR"));					}				});	} catch (e) {		jsLog(logStrMsg("Exception happened in saveExamineInfo: " + e,"ERROR"));	}}function saveSomeFiless(conhisid, filetype, filesource, filepath, createby,cusname, crednum , termno , deal_no) {//	alert("come in SaveSomeFile");	try {		Ext.Ajax.request({					url : __ctxPath + '/customer/updateHisAndFileConHis.do',					method : 'post',					//async: false,					params : {						conHisId : conhisid,						fileType : filetype,						fileSource : filesource,						filePath : filepath,						createBy : createby,						cusName : cusname,						credNum : crednum,						serialNum : deal_no,						terminalId : termno					},					success : function(response, options){					},					failure : function(response, options){						jsLog(logStrMsg("SAVESOMEFILE ERROR FAIL THE PATH :" + filepath ,"ERROR"));					}				});	} catch (e) {		jsLog(logStrMsg("Exception happened in saveSomeFile: " + e,"ERROR"));	}}function updateCheckPersonals(conhisid, remarks) {	try {		Ext.Ajax.request({					url : __ctxPath + '/customer/updateCheckPersonalConHis.do',					method : 'post',					async: false,					params : {						conHisId : conhisid,						remarks : remarks					},					success : function(response, options) {						i ++;						jsLog(logStrMsg("前台updateCheckPersnal()返回成功！","INFO"));					},					failure : function(response, options) {						jsLog(logStrMsg("前台updateCheckPersnal()返回失败！","INFO"));					}				});	} catch (e) {		jsLog(logStrMsg("updateCheckPersonal() catch info : " + e,"ERROR"));		//alert("Exception happened in saveSomeFile:" + e);	}}